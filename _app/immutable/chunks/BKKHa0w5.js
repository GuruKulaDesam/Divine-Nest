async function f(e,o={}){const{model:t="small",duration:n=10}=o;try{console.log(`Generating music locally: "${e}" (${n}s, ${t} model)`);const a=await fetch("http://localhost:3003/generate",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:e,duration:Math.min(n,30),model:t})});if(!a.ok){const c=await a.text();throw new Error(`Local MusicGen API error: ${a.status} - ${c}`)}const r=await a.blob(),i=await s(r);return console.log("Music generated successfully!"),i}catch(a){return console.error("Local MusicGen error:",a),console.log("Falling back to Hugging Face API..."),l(e,o)}}async function l(e,o={}){const{model:t="small",duration:n=10}=o,a="your_huggingface_token_here";try{const i=await fetch(`https://api-inference.huggingface.co/models/${t==="small"?"facebook/musicgen-small":t==="medium"?"facebook/musicgen-medium":"facebook/musicgen-large"}`,{method:"POST",headers:{Authorization:`Bearer ${a}`,"Content-Type":"application/json"},body:JSON.stringify({inputs:e,parameters:{duration:Math.min(n,30)}})});if(!i.ok){const u=await i.text();throw new Error(`MusicGen API error: ${i.status} - ${u}`)}const c=await i.blob();return await s(c)}catch(r){throw console.error("MusicGen generation failed:",r),r}}async function s(e){const o=await e.arrayBuffer();return await new(window.AudioContext||window.webkitAudioContext)().decodeAudioData(o)}function g(e,o,t){let n=e;return o&&(n+=`, ${o} style`),t&&(n+=`, ${t} mood`),n+=", high quality, professional production",n}const d={devotional:"devotional music, spiritual, peaceful, with traditional instruments",folk:"folk music, traditional, acoustic, warm and inviting",ambient:"ambient music, atmospheric, soothing, background music",classical:"classical music, orchestral, elegant, sophisticated",electronic:"electronic music, modern, synthesized, rhythmic",world:"world music, ethnic instruments, cultural, diverse"};function h(e,o){return d[e]}export{d as MUSIC_TEMPLATES,g as buildMusicPrompt,f as generateMusic,h as getTemplatePrompt};
