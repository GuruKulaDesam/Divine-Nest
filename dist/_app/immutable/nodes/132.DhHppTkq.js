var Ce=Object.defineProperty;var Ie=(g,e,t)=>e in g?Ce(g,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):g[e]=t;var se=(g,e,t)=>Ie(g,typeof e!="symbol"?e+"":e,t);import"../chunks/Bzak7iHL.js";import"../chunks/69_IOA4Y.js";import{o as Oe}from"../chunks/Dl7RRJWM.js";import{p as Fe,e as b,i as a,k as r,t as L,j as z,a as w,b as Pe,g as n,m as S,r as i,n as Re,q as p,s as v}from"../chunks/6uIj5N_2.js";import{i as le}from"../chunks/Dvp2nKH1.js";import{e as de,i as me}from"../chunks/D27cKp0K.js";import{s as x}from"../chunks/DtCY3ta1.js";import{i as $e}from"../chunks/CRscWiiN.js";import{u as _}from"../chunks/ABFA-kSa.js";import{s as l}from"../chunks/BesrdQ_8.js";class Ee{constructor(){se(this,"isInitialized",!1)}async initialize(){if(!this.isInitialized)try{await l.initialize(),this.isInitialized=!0,console.log("SQLite test data seeder initialized")}catch(e){throw console.error("Failed to initialize SQLite test data seeder:",e),e}}async populateAllTestData(){await this.initialize(),console.log("Starting to populate test data...");try{await this.populateReminderTemplates(),await this.populateFamilyMembers(),await this.populateGroceryItems(),await this.populateChores(),console.log("✅ All test data populated successfully!")}catch(e){throw console.error("Failed to populate test data:",e),e}}async populateReminderTemplates(){console.log("Populating reminder templates...");const e=[{title:"Morning Medicine - Elder Care",description:"Daily medicine reminder for elders (6 AM, 2 PM, 8 PM)",priority:"high",due_date:new Date(Date.now()+1440*60*1e3).toISOString().split("T")[0],due_time:"06:00"},{title:"Pooja/Prayer Time",description:"Daily prayer and pooja reminder (5-6 AM, 6 PM)",priority:"high",due_date:new Date().toISOString().split("T")[0],due_time:"05:30"},{title:"School Preparation",description:"Get ready for school - uniform, books, lunch (6:30-7:30 AM)",priority:"high",due_date:new Date(Date.now()+1440*60*1e3).toISOString().split("T")[0],due_time:"06:30"},{title:"Helper Clock-In",description:"Helper arrival and attendance tracking (8-9 AM)",priority:"high",due_date:new Date().toISOString().split("T")[0],due_time:"08:00"},{title:"Chore Start Time",description:"Daily household chores assignment (7 AM, 5 PM)",priority:"high",due_date:new Date().toISOString().split("T")[0],due_time:"07:00"},{title:"Bill Payment Reminder",description:"Monthly bill payments (1st-5th of month, 9-10 AM)",priority:"high",due_date:new Date(new Date().getFullYear(),new Date().getMonth()+1,5).toISOString().split("T")[0],due_time:"09:00"},{title:"Cooking Preparation",description:"Meal preparation and cooking reminders (6 AM, 4 PM)",priority:"medium",due_date:new Date().toISOString().split("T")[0],due_time:"16:00"},{title:"Travel Preparation",description:"Trip planning and preparation (4-6 AM on travel day)",priority:"medium",due_date:new Date(Date.now()+10080*60*1e3).toISOString().split("T")[0],due_time:"04:00"},{title:"Yoga/Walking Time",description:"Daily wellness and exercise reminder (6 AM or 6 PM)",priority:"medium",due_date:new Date().toISOString().split("T")[0],due_time:"18:00"},{title:"Monthly Inventory Check",description:"Check household supplies (gas, water, milk) - Monthly",priority:"medium",due_date:new Date(new Date().getFullYear(),new Date().getMonth()+1,15).toISOString().split("T")[0],due_time:"09:00"},{title:"Doctor Appointment",description:"Medical checkup and appointment reminder (1 hour before)",priority:"medium",due_date:new Date(Date.now()+4320*60*1e3).toISOString().split("T")[0],due_time:"14:00"},{title:"Birthday Celebration",description:"Family member birthday reminder (8 AM on event day)",priority:"low",due_date:new Date(Date.now()+720*60*60*1e3).toISOString().split("T")[0],due_time:"08:00"},{title:"Subscription Renewal",description:"Monthly subscription renewals (DTH, mobile, etc.)",priority:"low",due_date:new Date(new Date().getFullYear(),new Date().getMonth()+1,10).toISOString().split("T")[0],due_time:"10:00"},{title:"Festival Ritual Preparation",description:"Festival-specific rituals and preparations",priority:"low",due_date:new Date(Date.now()+1080*60*60*1e3).toISOString().split("T")[0],due_time:"06:00"},{title:"Tuition Class",description:"After-school tuition and extra classes (4-6 PM)",priority:"low",due_date:new Date().toISOString().split("T")[0],due_time:"16:00"},{title:"Salary Disbursement",description:"Monthly helper salary payment reminder (1st of month)",priority:"low",due_date:new Date(new Date().getFullYear(),new Date().getMonth()+1,1).toISOString().split("T")[0],due_time:"09:00"},{title:"Shraddham Ceremony",description:"Ancestral remembrance and rituals",priority:"medium",due_date:new Date(Date.now()+1440*60*60*1e3).toISOString().split("T")[0],due_time:"05:00"},{title:"Temple Visit Planning",description:"Weekly temple visit and preparation",priority:"medium",due_date:new Date(Date.now()+10080*60*1e3).toISOString().split("T")[0],due_time:"07:00"},{title:"Health Check-up",description:"Regular health monitoring and check-ups",priority:"high",due_date:new Date(Date.now()+336*60*60*1e3).toISOString().split("T")[0],due_time:"10:00"},{title:"Grocery Shopping",description:"Weekly grocery shopping and household supplies",priority:"medium",due_date:new Date(Date.now()+10080*60*1e3).toISOString().split("T")[0],due_time:"08:00"},{title:"School Fee Payment",description:"Monthly school fee and education expenses",priority:"high",due_date:new Date(new Date().getFullYear(),new Date().getMonth()+1,3).toISOString().split("T")[0],due_time:"09:00"}];for(const t of e)try{await l.saveReminder(t),console.log(`✅ Created reminder: ${t.title}`)}catch(m){console.error(`❌ Failed to create reminder: ${t.title}`,m)}console.log(`✅ Populated ${e.length} reminder templates`)}async populateFamilyMembers(){console.log("Populating family members...");const e=[{name:"Rajesh Kumar",relationship:"Father",phone:"+91-9876543210",email:"rajesh.kumar@email.com",address:"123 Temple Street, Chennai",emergency_contact:!0},{name:"Priya Sharma",relationship:"Mother",phone:"+91-9876543211",email:"priya.sharma@email.com",address:"123 Temple Street, Chennai",emergency_contact:!0},{name:"Arjun Kumar",relationship:"Son",phone:"+91-9876543212",email:"arjun.kumar@email.com",address:"123 Temple Street, Chennai",emergency_contact:!1},{name:"Meera Kumar",relationship:"Daughter",phone:"+91-9876543213",email:"meera.kumar@email.com",address:"123 Temple Street, Chennai",emergency_contact:!1},{name:"Suresh Kumar",relationship:"Grandfather",phone:"+91-9876543214",email:"suresh.kumar@email.com",address:"456 Elder Home, Chennai",emergency_contact:!0},{name:"Lakshmi Devi",relationship:"Grandmother",phone:"+91-9876543215",email:"lakshmi.devi@email.com",address:"456 Elder Home, Chennai",emergency_contact:!0},{name:"Ravi Kumar",relationship:"Uncle",phone:"+91-9876543216",email:"ravi.kumar@email.com",address:"789 Family Complex, Chennai",emergency_contact:!1},{name:"Sita Lakshmi",relationship:"Aunt",phone:"+91-9876543217",email:"sita.lakshmi@email.com",address:"789 Family Complex, Chennai",emergency_contact:!1}];for(const t of e)try{await l.saveFamilyMember(t),console.log(`✅ Created family member: ${t.name} (${t.relationship})`)}catch(m){console.error(`❌ Failed to create family member: ${t.name}`,m)}console.log(`✅ Populated ${e.length} family members`)}async populateGroceryItems(){console.log("Populating grocery items...");const e=[{name:"Milk",category:"Dairy",in_stock:!0,market_mode:!1},{name:"Bread",category:"Bakery",in_stock:!0,market_mode:!1},{name:"Rice",category:"Grains",in_stock:!0,market_mode:!1},{name:"Wheat Flour",category:"Grains",in_stock:!0,market_mode:!1},{name:"Sugar",category:"Pantry",in_stock:!0,market_mode:!1},{name:"Tea",category:"Beverages",in_stock:!0,market_mode:!1},{name:"Coffee",category:"Beverages",in_stock:!0,market_mode:!1},{name:"Tomatoes",category:"Vegetables",in_stock:!1,market_mode:!0},{name:"Onions",category:"Vegetables",in_stock:!1,market_mode:!0},{name:"Potatoes",category:"Vegetables",in_stock:!1,market_mode:!0},{name:"Green Chillies",category:"Vegetables",in_stock:!1,market_mode:!0},{name:"Coriander",category:"Vegetables",in_stock:!1,market_mode:!0},{name:"Turmeric Powder",category:"Spices",in_stock:!1,market_mode:!0},{name:"Red Chilli Powder",category:"Spices",in_stock:!1,market_mode:!0},{name:"Coriander Powder",category:"Spices",in_stock:!1,market_mode:!0},{name:"Garam Masala",category:"Spices",in_stock:!1,market_mode:!0},{name:"Mustard Seeds",category:"Spices",in_stock:!1,market_mode:!0},{name:"Bananas",category:"Fruits",in_stock:!1,market_mode:!0},{name:"Apples",category:"Fruits",in_stock:!1,market_mode:!0},{name:"Oranges",category:"Fruits",in_stock:!1,market_mode:!0},{name:"Dish Soap",category:"Cleaning",in_stock:!1,market_mode:!0},{name:"Laundry Detergent",category:"Cleaning",in_stock:!1,market_mode:!0},{name:"Toilet Paper",category:"Household",in_stock:!1,market_mode:!0},{name:"Trash Bags",category:"Household",in_stock:!1,market_mode:!0}];for(const t of e)try{await l.saveGroceryItem(t),console.log(`✅ Created grocery item: ${t.name} (${t.category})`)}catch(m){console.error(`❌ Failed to create grocery item: ${t.name}`,m)}console.log(`✅ Populated ${e.length} grocery items`)}async populateChores(){console.log("Populating chores...");const e=[{title:"Morning Kitchen Cleaning",assigned_to:"Helper",frequency:"daily",due_date:new Date().toISOString().split("T")[0]},{title:"Bathroom Cleaning",assigned_to:"Helper",frequency:"daily",due_date:new Date().toISOString().split("T")[0]},{title:"Floor Mopping",assigned_to:"Helper",frequency:"daily",due_date:new Date().toISOString().split("T")[0]},{title:"Dish Washing",assigned_to:"Helper",frequency:"daily",due_date:new Date().toISOString().split("T")[0]},{title:"Laundry",assigned_to:"Helper",frequency:"weekly",due_date:new Date(Date.now()+10080*60*1e3).toISOString().split("T")[0]},{title:"Grocery Shopping",assigned_to:"Mother",frequency:"weekly",due_date:new Date(Date.now()+10080*60*1e3).toISOString().split("T")[0]},{title:"School Bag Packing",assigned_to:"Mother",frequency:"daily",due_date:new Date(Date.now()+1440*60*1e3).toISOString().split("T")[0]},{title:"Homework Supervision",assigned_to:"Mother",frequency:"daily",due_date:new Date().toISOString().split("T")[0]},{title:"Temple Visit Preparation",assigned_to:"Father",frequency:"weekly",due_date:new Date(Date.now()+10080*60*1e3).toISOString().split("T")[0]},{title:"Bill Payment",assigned_to:"Father",frequency:"monthly",due_date:new Date(new Date().getFullYear(),new Date().getMonth()+1,5).toISOString().split("T")[0]},{title:"Car Maintenance",assigned_to:"Father",frequency:"monthly",due_date:new Date(new Date().getFullYear(),new Date().getMonth()+1,15).toISOString().split("T")[0]},{title:"Garden Watering",assigned_to:"Helper",frequency:"daily",due_date:new Date().toISOString().split("T")[0]}];for(const t of e)try{await l.saveChore(t),console.log(`✅ Created chore: ${t.title} (${t.assigned_to})`)}catch(m){console.error(`❌ Failed to create chore: ${t.title}`,m)}console.log(`✅ Populated ${e.length} chores`)}async clearAllTestData(){await this.initialize(),console.log("Clearing all test data...");try{await l.executeStatement("DELETE FROM reminders"),await l.executeStatement("DELETE FROM family_members"),await l.executeStatement("DELETE FROM grocery_items"),await l.executeStatement("DELETE FROM chores"),await l.executeStatement("DELETE FROM user_roles"),console.log("✅ All test data cleared")}catch(e){throw console.error("Failed to clear test data:",e),e}}async getDataSummary(){await this.initialize();try{const e=await l.getReminders(),t=await l.getFamilyMembers(),m=await l.getGroceryItems(),f=await l.getChores(),c=await l.getUserRole();return{reminders:e.length,familyMembers:t.length,groceryItems:m.length,chores:f.length,userRole:(c==null?void 0:c.role)||"none",platform:typeof window<"u"&&window.Capacitor?"mobile":"web"}}catch(e){return console.error("Failed to get data summary:",e),{error:e.message}}}}const H=new Ee;var Ae=b("<div> </div>"),Le=b('<div class="mt-2 text-red-400 font-bold">⚠️ ERRORS DETECTED</div>'),ze=b("<div> </div>"),He=b('<div class="mt-2 text-red-400 font-bold">⚠️ ERRORS DETECTED</div>'),qe=b('<div class="mobile-app min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4"><div class="fixed bottom-4 right-4 bg-black bg-opacity-80 text-white p-3 rounded-lg max-w-xs max-h-64 overflow-y-auto z-50 text-xs"><div class="font-bold mb-2 text-yellow-400">🔧 Home Management Suite Debug v1.1</div> <div class="font-bold mb-2">Minimal Test Log:</div> <!> <!></div> <div class="mobile-app min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 p-4"><div class="fixed bottom-4 right-4 bg-black bg-opacity-80 text-white p-3 rounded-lg max-w-xs max-h-64 overflow-y-auto z-50 text-xs"><div class="font-bold mb-2 text-yellow-400">🔧 Home Management Suite SQLite Debug v1.3</div> <div class="font-bold mb-2">Test Log:</div> <!> <!></div> <div class="max-w-md mx-auto bg-white rounded-xl shadow-lg p-6 mt-8"><h1 class="text-2xl font-bold text-center mb-4 text-gray-800">SQLite Test Suite</h1> <p class="text-center text-gray-600 mb-6">Testing Capacitor SQLite integration with comprehensive test data</p> <div class="mb-6"><div class="flex items-center justify-center mb-4"><div></div> <span class="text-sm font-medium"> </span></div></div> <div class="bg-gray-50 p-4 rounded-lg mb-6"><h3 class="font-semibold text-gray-800 mb-3">� Data Summary</h3> <div class="grid grid-cols-2 gap-4 text-sm"><div><span class="text-gray-600">Reminders:</span> <span class="font-medium text-blue-600"> </span></div> <div><span class="text-gray-600">Family Members:</span> <span class="font-medium text-blue-600"> </span></div> <div><span class="text-gray-600">Grocery Items:</span> <span class="font-medium text-blue-600"> </span></div> <div><span class="text-gray-600">Chores:</span> <span class="font-medium text-blue-600"> </span></div></div> <div class="mt-3 pt-3 border-t border-gray-200"><div class="text-sm"><span class="text-gray-600">User Role:</span> <span class="font-medium text-purple-600"> </span></div> <div class="text-sm mt-1"><span class="text-gray-600">Platform:</span> <span class="font-medium text-green-600"> </span></div></div></div> <div class="space-y-3 mb-6"><button> </button> <button class="w-full bg-red-600 hover:bg-red-700 text-white font-medium py-3 px-4 rounded-lg transition-colors">🗑️ Clear Test Data</button> <button class="w-full bg-gray-600 hover:bg-gray-700 text-white font-medium py-3 px-4 rounded-lg transition-colors">🔄 Refresh Summary</button></div> <div class="bg-blue-50 p-4 rounded-lg mb-6"><h3 class="font-semibold text-blue-800 mb-2">📱 Platform Info</h3> <div class="text-sm text-blue-700"><div></div> <div></div> <div></div></div></div> <div class="mt-6 p-4 bg-yellow-50 rounded-lg"><h3 class="font-semibold text-yellow-800 mb-2">📋 Test Instructions</h3> <ul class="text-sm text-yellow-700 space-y-1"><li>• Use "Populate Test Data" to load comprehensive reminder templates</li> <li>• Check debug panel for detailed operation results</li> <li>• Green messages indicate successful operations</li> <li>• Red messages indicate errors that need fixing</li> <li>• Data persists across app restarts</li></ul></div></div></div></div>');function Xe(g,e){Fe(e,!1);let t=S([]),m=S(!1),f=S(!1),c=S(!1),y=S({reminders:0,familyMembers:0,groceryItems:0,chores:0,userRole:"none",platform:"unknown"});function s(o,d=!1){v(t,[...n(t),{text:o,isError:d,timestamp:new Date().toLocaleTimeString()}]),console.log(o),d&&v(m,!0)}async function ce(){try{s("Initializing SQLite service..."),await l.initialize(),v(f,!0),s("✅ SQLite service initialized successfully"),s("Testing user role operations..."),await l.saveUserRole("mother","mother");const o=await l.getUserRole();s(`✅ User role saved and retrieved: ${JSON.stringify(o)}`),await D()}catch(o){s(`❌ SQLite test failed: ${o.message}`,!0),console.error("SQLite test error:",o)}}async function pe(){if(!n(c)){v(c,!0),s("🚀 Starting test data population...");try{await H.populateAllTestData(),s("✅ Test data population completed!"),await D()}catch(o){s(`❌ Test data population failed: ${o.message}`,!0),console.error("Test data population error:",o)}finally{v(c,!1)}}}async function ue(){try{s("🗑️ Clearing all test data..."),await H.clearAllTestData(),s("✅ Test data cleared!"),await D()}catch(o){s(`❌ Failed to clear test data: ${o.message}`,!0),console.error("Clear test data error:",o)}}async function D(){try{v(y,await H.getDataSummary()),s(`📊 Data summary updated: ${JSON.stringify(n(y))}`)}catch(o){s(`❌ Failed to update data summary: ${o.message}`,!0)}}Oe(async()=>{s("Mobile page mounted successfully"),s("Testing userRole store import..."),s("userRole imported: "+(typeof _<"u")),s("userRole type: "+typeof _),_?(s("userRole has subscribe: "+(typeof _.subscribe=="function")),s("userRole has set: "+(typeof _.set=="function")),s("userRole has update: "+(typeof _.update=="function"))):s("userRole is null/undefined!",!0),setTimeout(async()=>{await ce()},500)}),$e();var k=qe(),T=a(k),q=r(a(T),4);de(q,1,()=>n(t),me,(o,d)=>{var u=Ae(),A=a(u);i(u),L(()=>{x(u,1,`mb-1 ${n(d).isError?"text-red-400":"text-green-400"}`),p(A,`${n(d).timestamp??""}: ${n(d).text??""}`)}),w(o,u)});var ge=r(q,2);{var ye=o=>{var d=Le();w(o,d)};le(ge,o=>{n(m)&&o(ye)})}i(T);var G=r(T,2),M=a(G),Q=r(a(M),4);de(Q,1,()=>n(t),me,(o,d)=>{var u=ze(),A=a(u);i(u),L(()=>{x(u,1,`mb-1 ${n(d).isError?"text-red-400":"text-green-400"}`),p(A,`${n(d).timestamp??""}: ${n(d).text??""}`)}),w(o,u)});var he=r(Q,2);{var ve=o=>{var d=He();w(o,d)};le(he,o=>{n(m)&&o(ve)})}i(M);var B=r(M,2),C=r(a(B),4),j=a(C),U=a(j),Y=r(U,2),_e=a(Y);i(Y),i(j),i(C);var I=r(C,2),O=r(a(I),2),F=a(O),V=r(a(F),2),fe=a(V,!0);i(V),i(F);var P=r(F,2),W=r(a(P),2),we=a(W,!0);i(W),i(P);var R=r(P,2),K=r(a(R),2),Se=a(K,!0);i(K),i(R);var N=r(R,2),J=r(a(N),2),be=a(J,!0);i(J),i(N),i(O);var X=r(O,2),$=a(X),Z=r(a($),2),De=a(Z,!0);i(Z),i($);var ee=r($,2),te=r(a(ee),2),xe=a(te,!0);i(te),i(ee),i(X),i(I);var E=r(I,2),h=a(E),ke=a(h,!0);i(h);var ae=r(h,2),Te=r(ae,2);i(E);var ie=r(E,2),re=r(a(ie),2),oe=a(re);oe.textContent=`Platform: ${typeof window<"u"&&window.navigator?"Web Browser":"Unknown"}`;var ne=r(oe,2);ne.textContent=`Capacitor: ${typeof window<"u"&&window.Capacitor?"✅ Available":"❌ Not Available"}`;var Me=r(ne,2);Me.textContent=`SQLite Plugin: ${typeof window<"u"&&window.CapacitorSQLite?"✅ Available":"❌ Not Available"}`,i(re),i(ie),Re(2),i(B),i(G),i(k),L(()=>{x(U,1,`w-4 h-4 rounded-full ${n(f)?"bg-green-500":"bg-yellow-500"} mr-2`),p(_e,`SQLite: ${n(f)?"✅ Initialized":"⏳ Initializing..."}`),p(fe,n(y).reminders),p(we,n(y).familyMembers),p(Se,n(y).groceryItems),p(be,n(y).chores),p(De,n(y).userRole),p(xe,n(y).platform),x(h,1,`w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-lg transition-colors ${n(c)?"opacity-50 cursor-not-allowed":""}`),h.disabled=n(c),p(ke,n(c)?"🚀 Populating Test Data...":"🚀 Populate Test Data")}),z("click",h,pe),z("click",ae,ue),z("click",Te,D),w(g,k),Pe()}export{Xe as component};
